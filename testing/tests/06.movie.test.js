/* eslint-disable no-undef */
import BasePage from '../PageObjects/BasePage';
import TopBar from '../PageObjects/TopBar';
import LoginPage from '../PageObjects/LoginPage';
import NewPostForm from '../PageObjects/NewPostForm';
import NewMovieForm from '../PageObjects/NewMovieForm';
import Movie from '../PageObjects/Movie';
import ProfilePage from '../PageObjects/ProfilePage';
import ConfirmWindow from '../PageObjects/ConfirmWindow';
import SuccessWindow from '../PageObjects/SuccessWindow';
import config from '../../config';
import uploadFile from '../helpers/uploadFile';
import clearInput from '../helpers/clearInput';

describe('Check movie functionality', () => {
	beforeEach(() => {
		browser.setWindowSize(1920, 1080);
		BasePage.open();
		TopBar.profileMenu.click();
		expect(TopBar.loginListItem).toBeDisplayed();
		TopBar.loginListItem.click();
		LoginPage.emailInput.setValue(config.testEmail);
		LoginPage.passwordInput.setValue(config.testPasswordChanged);
		LoginPage.loginButton.click();
		expect(NewPostForm.pageTitle).toHaveText('Create your post');
		TopBar.moviesTab.click();
		expect(NewMovieForm.pageTitle).toHaveText('Add trailer');
	});
	afterEach(() => {
		browser.reloadSession();
	});
	it('should display elements on new movie form', () => {
		expect(NewMovieForm.titleInput).toBeDisplayed();
		expect(NewMovieForm.genreInput).toBeDisplayed();
		expect(NewMovieForm.descriptionInput).toBeDisplayed();
		expect(NewMovieForm.movieCreationButton).toBeDisplayed();
		expect(NewMovieForm.movieCreationButton).toBeClickable();
		expect(NewMovieForm.addVideoButton).toBeDisplayed();
		expect(NewMovieForm.addVideoButton).toBeDisabled();
		uploadFile(NewMovieForm.hiddenVideoInput, '../assets/videos/trailer.mp4');
		expect(NewMovieForm.deleteVideoButton).toBeDisplayed();
		expect(NewMovieForm.addVideoButton).toBeClickable();
	});
	it('should display error when adding movie with invalid data', () => {
		uploadFile(NewMovieForm.hiddenVideoInput, '../assets/videos/trailer.mp4');
		NewMovieForm.addVideoButton.click();
		expect(NewMovieForm.titleError).toHaveText('Title is required !');
		expect(NewMovieForm.genreError).toHaveText('Genre is required !');
		expect(NewMovieForm.descriptionError).toHaveText('Description is required !');
		NewMovieForm.titleInput.setValue('test title');
		NewMovieForm.addVideoButton.click();
		NewMovieForm.titleError.waitForExist({ reverse: true });
		expect(NewMovieForm.genreError).toHaveText('Genre is required !');
		expect(NewMovieForm.descriptionError).toHaveText('Description is required !');
		clearInput(NewMovieForm.titleInput);
		NewMovieForm.genreInput.setValue('test genre');
		NewMovieForm.addVideoButton.click();
		expect(NewMovieForm.titleError).toHaveText('Title is required !');
		NewMovieForm.genreError.waitForExist({ reverse: true });
		expect(NewMovieForm.descriptionError).toHaveText('Description is required !');
		clearInput(NewMovieForm.genreInput);
		NewMovieForm.descriptionInput.setValue('test description');
		NewMovieForm.addVideoButton.click();
		expect(NewMovieForm.titleError).toHaveText('Title is required !');
		expect(NewMovieForm.genreError).toHaveText('Genre is required !');
		NewMovieForm.descriptionError.waitForExist({ reverse: true });
	});
	it('shoud successfully add new movie', () => {
		NewMovieForm.titleInput.setValue('Movie title');
		NewMovieForm.genreInput.setValue('Movie genre');
		NewMovieForm.descriptionInput.setValue('Movie description');
		uploadFile(NewMovieForm.hiddenVideoInput, '../assets/videos/trailer.mp4');
		NewMovieForm.addVideoButton.click();
		Movie.movieTitle.waitForDisplayed();
		expect(Movie.movieTitle).toBeDisplayed();
		expect(Movie.movieTitle).toHaveText('Movie title');
		expect(Movie.movieGenre).toBeDisplayed();
		expect(Movie.movieGenre).toHaveText('Movie genre');
		expect(Movie.movieDescription).toBeDisplayed();
		expect(Movie.movieDescription).toHaveText('Movie description');
		expect(Movie.movieVideo).toBeDisplayed();
	});
	it('should successfully delete movie', () => {
		TopBar.profileMenu.click();
		TopBar.profileListItem.click();
		browser.refresh();
		expect(ProfilePage.pageTitle).toHaveText('Profile');
		ProfilePage.profileMoviesTab.click();
		expect(Movie.movieTitle).toBeDisplayed();
		expect(Movie.movieTitle).toHaveText('Movie title');
		expect(Movie.movieGenre).toBeDisplayed();
		expect(Movie.movieGenre).toHaveText('Movie genre');
		expect(Movie.movieDescription).toBeDisplayed();
		expect(Movie.movieDescription).toHaveText('Movie description');
		expect(Movie.deleteMovieButton).toBeDisplayed();
		Movie.deleteMovieButton.click();
		expect(ConfirmWindow.content).toBeDisplayed();
		expect(ConfirmWindow.calcelButton).toBeDisplayed();
		ConfirmWindow.calcelButton.click();
		ConfirmWindow.content.waitForExist({ reverse: true });
		Movie.deleteMovieButton.click();
		expect(ConfirmWindow.content).toBeDisplayed();
		expect(ConfirmWindow.confirmButton).toBeDisplayed();
		ConfirmWindow.confirmButton.click();
		expect(SuccessWindow.content).toBeDisplayed();
		expect(SuccessWindow.okButton).toBeDisplayed();
		SuccessWindow.okButton.click();
		ProfilePage.profileMoviesTab.click();
		Movie.movieTitle.waitForExist({ reverse: true });
	});
});
